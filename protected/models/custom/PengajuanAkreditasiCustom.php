<?php
/**
 * Class PengajuanAkreditasiCustom
 */

class PengajuanAkreditasiCustom extends PengajuanAkreditasi
{
    public $id_regency;

    public function rules()
    {
        return parent::rules(); // TODO: Change the autogenerated stub
    }

    public function attributeLabels()
    {
        return array(
            'tgl_pengajuan' => 'Tanggal Pengajuan',
            'jenis_pengajuan' => 'Jenis Usulan '
        );
    }

    public static function model($className = __CLASS__)
    {
        return parent::model($className); // TODO: Change the autogenerated stub
    }

    public static function getInstance() {
        $klinik = KlinikCustom::getInstance();
        $model = self::model()->findByAttributes(array(
            'id_klinik' => $klinik->id,
            'status' => array(StatusPengajuan::DRAFT, StatusPengajuan::DIAJUKAN, StatusPengajuan::VISIT, StatusPengajuan::DITERIMA)
        ));
        if (empty($model)) {
            $model = new PengajuanAkreditasiCustom();
            $model->id_klinik = $klinik->id;
            $model->status = StatusPengajuan::DRAFT;
            $model->save();
        }
        return $model;
    }

    public static function getAllJenisPengajuanOptions() {
        return array(
            'pertama' => 'Usulan Pertama',
            'remedial' => 'Remedial',
            'perpanjangan' => 'Perpanjangan'
        );
    }

    public function getJenisPengajuan() {
        $options = self::getAllJenisPengajuanOptions();
        return $options[$this->jenis_pengajuan];
    }

    public function hasDocuments() {
        $docs = BerkasAkreditasiCustom::model()->countByAttributes(array(
            'id_pengajuan'=>$this->id
        ));
        return $docs;
    }

    /**
     * @return int|mixed
     * @throws CException
     */
    public function getLastNoUrut() {
        $cmd = Yii::app()->db->createCommand('SELECT MAX(no_urut) FROM pengajuan_akreditasi');
        $no_urut = $cmd->queryScalar();
        if (empty($no_urut)) {
            return 1;
        }
        else return $no_urut+1;
    }

    public function getStatus() {
        $options = StatusPengajuan::getAllStatusPengajuanOptions();
        return $options[$this->status];
    }

    public static function countAll() {
        $criteria = new CDbCriteria();
        $criteria->condition = 'no_urut IS NOT NULL';
        return self::model()->count();
    }

    public static function countAllCanceled() {
        return self::model()->countByAttributes(array('status'=>array(StatusPengajuan::BATAL, StatusPengajuan::DITOLAK)));
    }

    public static function countAllAccept() {
        return self::model()->countByAttributes(array('status'=>array(StatusPengajuan::DITERIMA, StatusPengajuan::REKOMENDASI)));
    }

    /**
     * @return CActiveDataProvider
     */
    public function search()
    {
        // @todo Please modify the following code to remove attributes that should not be searched.

        $criteria=new CDbCriteria;

        $criteria->compare('id',$this->id);
        $criteria->compare('id_klinik',$this->id_klinik);
        $criteria->compare('no_urut',$this->no_urut);
        $criteria->compare('tgl_pengajuan',$this->tgl_pengajuan,true);
        $criteria->compare('jenis_pengajuan',$this->jenis_pengajuan,true);
        $criteria->compare('tgl_penetapan',$this->tgl_penetapan,true);
        $criteria->compare('status',$this->status);
        $criteria->compare('status_info',$this->status_info);
        $criteria->compare('status_alamat',$this->status_alamat);
        $criteria->compare('status_kontak',$this->status_kontak);
        $criteria->compare('status_fasilitas',$this->status_fasilitas);
        $criteria->compare('status_foto',$this->status_foto);
        $criteria->compare('status_dokumen',$this->status_dokumen);

        if (!empty($this->id_regency)) {
            $criteria->join = 'left join klinik t2 ON t.id_klinik = t2.id left join alamat t3 on t3.id_klinik = t2.id';
            $criteria->compare('t3.kota', $this->id_regency);
        }

        return new CActiveDataProvider($this, array(
            'criteria'=>$criteria,
            'pagination'=>array('pageSize'=>5)
        ));
    }
}